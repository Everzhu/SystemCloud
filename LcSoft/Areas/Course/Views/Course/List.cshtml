@model XkSystem.Areas.Course.Models.Course.List

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
    <div class="row">
        <div class="col-xs-6">
            <h4>课程模块</h4>
        </div>
        <div class="col-xs-6 text-right">
            <a href="@Url.Action("Edit")" class="btn btn-primary pop" dataHeight="500px" dataSize="Large">
                <span class="glyphicon glyphicon-plus"></span>
                @Resources.LocalizedText.BtnAdd
            </a>
            <a href="@Url.Action("Delete")" class="btn btn-danger delete">
                <span class="glyphicon glyphicon-trash"></span>
                @Resources.LocalizedText.BtnDelete
            </a>
            <div class="btn-group">
                <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown">
                    <span class="glyphicon glyphicon-cog"></span>
                    @Resources.LocalizedText.BtnOther
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu dropdown-menu-right">
                    <li><a href="@Url.Action("Import")" class="pop" dataHeight="500px" dataSize="Large">@Resources.LocalizedText.BtnImportFromExcel</a></li>
                    <li><a href="@Url.Action("Export", new { SubjectId = Model.SubjectId, CourseTypeId = Model.CourseTypeId })">@Resources.LocalizedText.BtnExportToExcel</a></li>
                    <li role="separator" class="divider"></li>
                    <li><a href="@Url.Action("List", "Subject")">科目设置</a></li>
                    <li><a href="@Url.Action("List", "CourseType")">课程类型</a></li>
                    <li><a href="@Url.Action("List","CourseDomain")">课程领域</a></li>
                    <li><a href="@Url.Action("List", "CourseGroup")">课程分组</a></li>
                </ul>
            </div>
        </div>
    </div>
    <hr />
    <nav class="navbar">
        <div class="navbar-left navbar-form">
            <div class="btn-group">
                <a class="btn btn-@(Model.ShowModel == "Area" ? "default" : "warning")" href="@Url.Action("List", new { showModel = "Subject" })">按科目</a>
                <a class="btn btn-@(Model.ShowModel == "Area" ? "warning" : "default")" href="@Url.Action("List", new { showModel = "Area" })">按领域</a>
            </div>
            @if (Model.ShowModel == "Area")
                {
                @Html.DropDownListFor(d => d.CourseDomainId, Model.CourseDomainList, "课程领域", new { @class = "form-control form-group postback" })
            }
            else
            {
                @Html.DropDownListFor(d => d.SubjectId, Model.SubjectList, "==科目==", new { @class = "form-control form-group postback" })
                @Html.DropDownListFor(d => d.CourseTypeId, Model.CourseTypeList, "课程类型", new { @class = "form-control form-group postback" })
            }
            @Html.DropDownListFor(d => d.CourseGroupId, Model.CourseGroupList, "课程分组", new { @class = "form-control form-group postback" })
            <div class="input-group form-group">
                @Html.TextBoxFor(d => d.SearchText, new { @class = "form-control", placeholder = Resources.LocalizedText.TipSearch })
                <span class="input-group-btn">
                    <button class="btn btn-primary" type="submit">
                        <span class="glyphicon glyphicon-search"></span>
                    </button>
                </span>
            </div>
        </div>
    </nav>
    foreach (var subject in Model.CourseSubjectList.Where(d => d.Id == Model.SubjectId || Model.SubjectId == 0))
    {
        <fieldset>
            <legend>
                @subject.SubjectName
            </legend>
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-striped">
                    <thead>
                        <tr>
                            <th style="width:30px;">
                                @Html.CheckBox("CboxAll")
                            </th>
                            <th>
                                @Html.DisplayNameFor(d => d.CourseList.FirstOrDefault().CourseGroupName)
                            </th>
                            <th class="@(Model.ShowModel == "Area" ? "" : "hidden")">
                                @Html.DisplayNameFor(d => d.CourseList.FirstOrDefault().CourseDomainName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(d => d.CourseList.FirstOrDefault().CourseName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(d => d.CourseList.FirstOrDefault().CourseCode)
                            </th>
                            <th>
                                @Html.DisplayNameFor(d => d.CourseList.FirstOrDefault().CourseNameEn)
                            </th>
                            <th style="width:100px;">
                                @Html.DisplayNameFor(d => d.CourseList.FirstOrDefault().CourseTypeName)
                            </th>                           
                            <th style="width:80px;">
                                @Html.DisplayNameFor(d => d.CourseList.FirstOrDefault().Point)
                            </th>
                            <th style="width:80px;">
                                @Html.DisplayNameFor(d => d.CourseList.FirstOrDefault().Hour)
                            </th>
                            <th style="width:80px;">
                                @Html.DisplayNameFor(d => d.CourseList.FirstOrDefault().IsLevel)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var a in Model.CourseList.Where(d => d.SubjectName == subject.SubjectName).OrderBy(d => d.CourseCode))
                        {
                            <tr>
                                <td>
                                    <input type="checkbox" id="CboxId" name="CboxId" value="@a.Id" />
                                </td>
                                <td>
                                    @a.CourseGroupName
                                </td>
                                <td class="@(Model.ShowModel == "Area" ? "" : "hidden")">
                                    @a.CourseDomainName
                                </td>
                                <td>
                                    <a href="@Url.Action("Edit", new { id = a.Id })" class="pop" dataHeight="500px" dataSize="Large">@a.CourseName</a>
                                </td>
                                <td>
                                    @a.CourseCode
                                </td>
                                <td>
                                    @a.CourseNameEn
                                </td>
                                <td>
                                    @a.CourseTypeName
                                </td>
                                <td>
                                    @a.Point
                                </td>
                                <td>
                                    @a.Hour
                                </td>
                                <td>
                                    @if (a.IsLevel)
                                    {
                                        <a href="@Url.Action("SetLevel", new { Id = a.Id })" class="btn btn-success btn-xs post">是</a>
                                    }
                                    else
                                    {
                                        <a href="@Url.Action("SetLevel", new { Id = a.Id })" class="btn btn-default btn-xs post">否</a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </fieldset>
    }
}