@model XkSystem.Areas.Survey.Models.SurveyReport.SubjectOrg

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
    <div class="row">
        <div class="col-xs-6">
            <h4>科目班级统计</h4>
        </div>
        <div class="col-xs-6 text-right">
            <div class="btn-group">
                <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown">
                    <span class="glyphicon glyphicon-export"></span>
                    @Resources.LocalizedText.BtnExport
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu dropdown-menu-right">
                    <li><a href="@Url.Action("SubjectOrgExport", new { SurveyId = Model.SurveyId, SurveySubjectId = Model.SurveySubjectId,SurveyCourseId=Model.SurveyCourseId,SurveyTeacherId=Model.SurveyTeacherId, SearchText = Model.SearchText })">@Resources.LocalizedText.BtnExportToExcel</a></li>
                </ul>
            </div>
        </div>
    </div>
    <hr />
    <nav class="navbar">
        <div class="navbar-left navbar-form">
            @Html.DropDownListFor(d => d.SurveyId, Model.SurveyList, new { @class = "form-control postback" })
            @Html.DropDownListFor(d => d.SurveySubjectId, Model.SurveySubjectList, "==科目==", new { @class = "form-control postback" })
            @Html.DropDownListFor(d => d.SurveyCourseId, Model.SurveyCourseList, "==课程==", new { @class = "form-control postback" })
            @Html.DropDownListFor(d => d.SurveyTeacherId, Model.SurveyTeacherList, "==任课教师==", new { @class = "form-control postback" })
            <div class="input-group form-group">
                @Html.TextBoxFor(d => d.SearchText, new { @class = "form-control searchText", placeholder = Resources.LocalizedText.TipSearch })
                <span class="input-group-btn">
                    <button class="btn btn-primary" type="submit">
                        <span class="glyphicon glyphicon-search"></span>
                    </button>
                </span>
            </div>
        </div>
    </nav>
    <div class="table-responsive">
        @foreach (var org in Model.SurveySubjectOrgList.GroupBy(d => new { d.OrgId, d.OrgName, d.TeacherId, d.TeacherName }).Select(g => new { orgId = g.Key.OrgId, orgName = g.Key.OrgName, teacherId = g.Key.TeacherId, teacherName = g.Key.TeacherName }))
        {
            <fieldset>
                <legend>
                    <span class="label label-success" style="font-size:14px;">@org.teacherName</span>&nbsp;<span class="label label-primary" style="font-size:14px;">@org.orgName</span>
                </legend>
            </fieldset>
            <table class="table table-bordered table-hover table-striped">
                <thead>
                    <tr>
                        <th style="width:265px;" class="text-nowrap">评价内容</th>
                        <th class="text-nowrap">教学班</th>
                        @foreach (var option in Model.SurveyOptionList)
                        {
                            <th>选@(option.Text)人数</th>
                        }
                        <th>参评总人数</th>
                        <th>项平均得分</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.SurveySubjectOrgList.Where(d => d.OrgId == org.orgId && d.TeacherId == org.teacherId).GroupBy(d => new { d.OrgId, d.OrgName, d.SurveyItemName, d.SurveyItemNo }).Select(g => new { orgId = g.Key.OrgId, orgName = g.Key.OrgName, surverItemName = g.Key.SurveyItemName, surverItemNo = g.Key.SurveyItemNo }).OrderBy(d=>d.surverItemNo))
                    {
                        var optionAllCount = 0;
                        var optionAllSum = 0m;
                        var optionAllAvg = 0m;
                        <tr>
                            <td class="text-left text-nowrap">@item.surverItemName</td>
                            <td class="text-nowrap">@item.orgName</td>
                            @foreach (var option in Model.SurveyOptionList)
                            {
                                var optionCount = Model.SurveySubjectOrgList.Where(d => d.OrgId == org.orgId && d.TeacherId == org.teacherId && d.SurveyItemName == item.surverItemName && d.SurveyOptionName == option.Value.ToString()).FirstOrDefault();
                                if (optionCount != null)
                                {
                                    optionAllCount += optionCount.SurveyOptionCount;
                                    optionAllSum += optionCount.SurveyOptionSum;
                                }
                                <td>
                                    @(optionCount == null ? "" : optionCount.SurveyOptionCount.ToString())
                                </td>
                            }
                            <td>@optionAllCount</td>
                            <td>
                                @{
                                    if (optionAllCount > 0)
                                    {
                                        optionAllAvg = optionAllSum / optionAllCount;
                                    }
                                }
                                @Decimal.Round( optionAllAvg,2)
                            </td>
                        </tr>
                                    }
                </tbody>
            </table>
                                    }
    </div>
                                    }