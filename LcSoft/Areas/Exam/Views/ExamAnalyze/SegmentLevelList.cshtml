@model XkSystem.Areas.Exam.Models.ExamAnalyze.List

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
    <h4>综合成绩单科等级</h4>
    <nav class="navbar">
        <div class="navbar-right">
            <a href="@Url.Action("ExportSegmentLevel",new {examId=Model.ExamId,gradeId=Model.GradeId,subjectId=Model.SubjectId,SearchText = Model.SearchText })" class="btn btn-primary">
                <span class="glyphicon glyphicon-download-alt"></span>
                @Resources.LocalizedText.BtnExportToExcel
            </a>
        </div>
            <div class="navbar-left navbar-form">
                <div class="btn-group">
                    <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <span class="glyphicon glyphicon-list"></span>
                    </button>
                    <ul class="dropdown-menu">
                        <li><a href="@Url.Action("TotalMarkTopNList","ExamAnalyze")">考试成绩多科前N名</a></li>
                        <li><a href="@Url.Action("SegmentTopNList","ExamAnalyze")">综合成绩多科前N名</a></li>
                        <li><a href="@Url.Action("List","ExamAnalyze")">考试成绩多科分数段</a></li>
                        <li><a href="@Url.Action("SegmentList","ExamAnalyze")">综合成绩多科分数段</a></li>
                        <li><a href="@Url.Action("TotalMarkAvgList","ExamAnalyze")">考试成绩多班平均分</a></li>
                        <li><a href="@Url.Action("SegmentAvgList","ExamAnalyze")">综合成绩多班平均分</a></li>
                        <li class="active"><a href="@Url.Action("SegmentLevelList","ExamAnalyze")">综合成绩单科等级</a></li>
                        <li><a href="@Url.Action("CompreTotalMarkList","ExamAnalyze")">考试成绩综合分析</a></li>
                        <li><a href="@Url.Action("CompreList","ExamAnalyze")">综合成绩综合分析</a></li>
                    </ul>
                </div>
                @Html.DropDownListFor(d => d.ExamId, Model.ExamList, new { @class = "form-control postback" })
                @Html.DropDownListFor(d => d.GradeId, Model.GradeList, new { @class = "form-control postback" })
                @Html.DropDownListFor(d => d.SubjectId, Model.SubjectList, new { @class = "form-control postback" })
                <div class="input-group form-group">
                    @Html.TextBoxFor(d => d.SearchText, new { @class = "form-control", placeholder = Resources.LocalizedText.TipSearch })
                    <span class="input-group-btn">
                        <button class="btn btn-primary" type="submit">
                            <span class="glyphicon glyphicon-search"></span>
                        </button>
                    </span>
                </div>
            </div>
    </nav>

            <div class="table-responsive">
                <table class="table table-bordered table-hover table-striped">
                    <thead>
                        <tr>
                            <th rowspan="2" style="text-wrap:none" nowrap>
                                @Html.DisplayNameFor(d => d.ExamAnalyzeList.FirstOrDefault().ClassName)
                            </th>
                            @foreach (var level in Model.LevelList)
                            {
                                <th colspan="2" nowrap>
                                    @level.Text
                                </th>
                            }
                        </tr>
                        <tr>
                            @foreach (var subject in Model.LevelList)
                            {
                                for (var i = 0; i < Model.OptionList.Count(); i++)
                                {
                                    <th nowrap>@Model.OptionList[i]</th>
                                }
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var a in Model.ClassList)
                        {
                            <tr>
                                <td style="text-wrap:none" nowrap>
                                    <a href="@Url.Action("SegmentLevelDetailList", new { ExamId = Model.ExamId, GradeId = Model.GradeId, ClassId = a.Value.ConvertToInt(), SubjectId = Model.SubjectId})" class="active pop" dataSize="Large" dataTitle="@a.Text 综合成绩单科等级" dataHeight="550px" dataMethod="Info">@a.Text</a>
                                </td>
                                @foreach (var level in Model.LevelList)
                                {
                                    var mark = Model.ExamAnalyzeList.Where(d => d.LevelId == level.Value.ConvertToInt() && d.ClassId == a.Value.ConvertToInt()
                                                                            ).Select(d => d).FirstOrDefault();
                                    if (mark != null)
                                    {
                                        for (var i = 0; i < Model.OptionList.Count(); i++)
                                        {
                                            switch (i)
                                            {
                                                case 0:
                                                    <td nowrap>
                                                        @mark.StudentCount
                                                    </td>
                                                    break;
                                                case 1:
                                                    <td nowrap>
                                                        @mark.Rate
                                                    </td>
                                                    break;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <td nowrap>
                                        </td>
                                        <td nowrap>
                                        </td>
                                    }
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
}
