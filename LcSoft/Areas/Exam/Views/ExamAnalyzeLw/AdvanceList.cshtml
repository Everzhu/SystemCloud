@model XkSystem.Areas.Exam.Models.ExamAnalyze.List

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
    <h4>与上次考试进退步</h4>
    <nav class="navbar">
        <div class="navbar-right">
            <a href="@Url.Action("ExportAdvance", new { examId = Model.ExamId, lastexamId = Model.LastExamId, GradeId = Model.GradeId, chkSubject = Model.chkSubject, SearchText = Model.SearchText })" class="btn btn-primary">
                <span class="glyphicon glyphicon-download-alt"></span>
                @Resources.LocalizedText.BtnExportToExcel
            </a>
        </div>
            <div class="navbar-left navbar-form">
                <div class="btn-group">
                    <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <span class="glyphicon glyphicon-list"></span>
                    </button>
                    <ul class="dropdown-menu">
                        <li><a href="@Url.Action("ClassMarkList", "ExamAnalyzeLw")">班级成绩册</a></li>
                        <li><a href="@Url.Action("ExamTopRankList", "ExamAnalyzeLw")">各科前若干名</a></li>
                        <li><a href="@Url.Action("List", "ExamAnalyzeLwLw")">基本分析-按学科</a></li>
                        <li><a href="@Url.Action("ClassAnalyzeList", "ExamAnalyzeLw")">基本分析-（按班级）</a></li>
                        <li><a href="@Url.Action("ExamLevelList", "ExamAnalyzeLw")">等级分析</a></li>
                        <li><a href="@Url.Action("SegmentSubjectList", "ExamAnalyzeLw")">分数段</a></li>
                        <li class="active"><a href="@Url.Action("AdvanceList", "ExamAnalyzeLw")">学生成绩进退步</a></li>
                        <li><a href="@Url.Action("TotalMarkTopNList", "ExamAnalyzeLw")">多科前N名</a></li>
                    </ul>
                </div>
                @Html.DropDownListFor(d => d.ExamId, Model.ExamList, new { @class = "form-control postback" })
                上次考试
                @Html.DropDownListFor(d => d.LastExamId, Model.LastExamList, new { @class = "form-control" })
                @Html.DropDownListFor(d => d.GradeId, Model.GradeList, new { @class = "form-control postback" })
                <br />
                科目<input type="checkbox" class="form-control" id="CheckedAll" name="CheckedAll" value="-1" onclick="javascript:checkAll(this)" @(Model.CheckedAll == "-1" ? "checked=checked" : "") /> 全选
                <div class="btn-group">

                    @foreach (var item in Model.SubjectList)
                    {
                        var selectsubject = Model.selectSubjectList.Where(d => d.Value == item.Value).FirstOrDefault();
                        <input type="checkbox" class="form-control" id="chkSubject" name="chkSubject" value="@item.Value" @(selectsubject != null ? "checked=checked" : "" ) />@item.Text

                    }
                </div>
                <div class="input-group form-group">
                    @Html.TextBoxFor(d => d.SearchText, new { @class = "form-control", placeholder = Resources.LocalizedText.TipSearch })
                    <span class="input-group-btn">
                        <button class="btn btn-primary" type="submit">
                            <span class="glyphicon glyphicon-search"></span>
                        </button>
                    </span>
                </div>
            </div>
    </nav>

            <!--startprint-->
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-striped">
                    <thead>
                        <tr>
                            <th rowspan="3" style="vertical-align:middle;">班级</th>
                            <th rowspan="3" style="vertical-align:middle;">学号</th>
                            <th rowspan="3" style="vertical-align:middle;">姓名</th>
                            <th colspan="6">总分</th>
                            @foreach (var s in Model.selectSubjectList)
                            {
                                <th colspan="6">@s.Text</th>
                            }
                        </tr>
                        <tr>
                            <th colspan="3">成绩</th>
                            <th colspan="3">名次</th>
                            @foreach (var s in Model.selectSubjectList)
                            {
                                <th colspan="3">成绩</th>
                                <th colspan="3">名次</th>
                            }
                        </tr>
                        <tr>
                            <th>上次</th>
                            <th>本次</th>
                            <th>进退</th>
                            <th>上次</th>
                            <th>本次</th>
                            <th>进退</th>
                            @foreach (var s in Model.selectSubjectList)
                            {
                                <th>上次</th>
                                <th>本次</th>
                                <th>进退</th>
                                <th>上次</th>
                                <th>本次</th>
                                <th>进退</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            foreach (var a in Model.ClassStudentList)
                            {
                                var ntModel = Model.ExamNtStudentList.Where(d => d.ClassId == a.ClassId && d.StudentId == a.StudentId).FirstOrDefault();
                                var lsModel = Model.ExamLsStudentList.Where(d => d.ClassId == a.ClassId && d.StudentId == a.StudentId).FirstOrDefault();
                                <tr>
                                    <td>@a.ClassName</td>
                                    <td>@a.StudentCode</td>
                                    <td>@a.StudentName</td>
                                    <td>@(ntModel != null ? ntModel.TotalMark : 0)</td>
                                    <td>@(lsModel != null ? lsModel.TotalMark : 0)</td>
                                    <td>@(lsModel != null ? (ntModel != null ? lsModel.TotalMark - ntModel.TotalMark : lsModel.TotalMark) : (ntModel != null ? 0-ntModel.TotalMark : 0))</td>
                                    <td>@(ntModel != null ? ntModel.TotalGradeRank : 0)</td>
                                    <td>@(lsModel != null ? lsModel.TotalGradeRank : 0)</td>
                                    <td>@(ntModel != null ? (lsModel != null ? ntModel.TotalGradeRank - lsModel.TotalGradeRank : ntModel.TotalGradeRank) : (lsModel != null ? 0-lsModel.TotalGradeRank : 0))</td>
                                    @foreach (var s in Model.selectSubjectList)
                                    {
                                        var ntSubjectModel = Model.SNtClassStudentLevelList.Where(d => d.ClassId == a.ClassId && d.StudentId == a.StudentId && d.SubjectId == s.Value.ConvertToInt()).FirstOrDefault();
                                        var lsSubjectModel = Model.SClassStudentLevelList.Where(d => d.ClassId == a.ClassId && d.StudentId == a.StudentId && d.SubjectId == s.Value.ConvertToInt()).FirstOrDefault();
                                        <td>@(ntSubjectModel != null ? ntSubjectModel.TotalMark : 0)</td>
                                        <td>@(lsSubjectModel != null ? lsSubjectModel.TotalMark : 0)</td>
                                        <td>@(lsSubjectModel != null ? (ntSubjectModel != null ? lsSubjectModel.TotalMark - ntSubjectModel.TotalMark :lsSubjectModel.TotalMark) : (ntSubjectModel != null ? 0-ntSubjectModel.TotalMark : 0))</td>
                                        <td>@(ntSubjectModel != null ? ntSubjectModel.GradeRank : 0)</td>
                                        <td>@(lsSubjectModel != null ? lsSubjectModel.GradeRank : 0)</td>
                                        <td>@(ntSubjectModel != null ? (lsSubjectModel != null ? ntSubjectModel.GradeRank - lsSubjectModel.GradeRank :ntSubjectModel.GradeRank) : (lsSubjectModel != null ? 0-lsSubjectModel.GradeRank : 0))</td>
                                    }
                                </tr>
                            }
                        }

                    </tbody>
                </table>
            </div>
            <!--endprint-->
                            }
<script language="Javascript">
    function preview() {
        var prnhtml = null;
        bdhtml = window.document.body.innerHTML;
        sprnstr = "<!--startprint-->";//开始标识
        eprnstr = "<!--endprint-->";//结束标识
        prnhtml = bdhtml.substr(bdhtml.indexOf(sprnstr) + 17);
        prnhtml = prnhtml.substring(0, prnhtml.indexOf(eprnstr)); //截取标识之间部分打印
        FGFG = window.document.body.innerHTML
        window.document.body.innerHTML = prnhtml;
        window.print();
        window.document.body.innerHTML = FGFG //如果不加此行，没有打印的部分在页面上会隐藏掉
        window.location.reload();
    }
    function checkAll(obj) {
        $("input[name='chkSubject']").prop('checked', $(obj).prop('checked'));
    }
</script>