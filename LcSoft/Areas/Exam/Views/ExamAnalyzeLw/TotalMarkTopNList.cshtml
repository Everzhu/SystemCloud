@model XkSystem.Areas.Exam.Models.ExamAnalyze.List

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
    <h4>多科前N名</h4>
    <nav class="navbar">
        <div class="navbar-right">
            <a href="@Url.Action("ExportTotalMarkTopN",new {examId=Model.ExamId,gradeId=Model.GradeId,chkSubject=Model.chkSubject, chkClass=Model.chkClass,SearchText = Model.SearchText })" class="btn btn-primary">
                <span class="glyphicon glyphicon-download-alt"></span>
                @Resources.LocalizedText.BtnExportToExcel
            </a>
        </div>
        <div class="navbar-left navbar-form">
            <div class="btn-group">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span class="glyphicon glyphicon-list"></span>
                </button>
                <ul class="dropdown-menu">
                    <li><a href="@Url.Action("ClassMarkList", "ExamAnalyzeLw")">班级成绩册</a></li>
                    <li><a href="@Url.Action("ExamTopRankList", "ExamAnalyzeLw")">各科前若干名</a></li>
                    <li><a href="@Url.Action("List", "ExamAnalyzeLw")">基本分析-按学科</a></li>
                    <li><a href="@Url.Action("ClassAnalyzeList", "ExamAnalyzeLw")">基本分析-（按班级）</a></li>
                    <li><a href="@Url.Action("ExamLevelList", "ExamAnalyzeLw")">等级分析</a></li>
                    <li><a href="@Url.Action("SegmentSubjectList", "ExamAnalyzeLw")">分数段</a></li>
                    <li><a href="@Url.Action("AdvanceList", "ExamAnalyzeLw")">学生成绩进退步</a></li>
                    <li class="active"><a href="@Url.Action("TotalMarkTopNList", "ExamAnalyzeLw")">多科前N名</a></li>
                </ul>
            </div>
            @Html.DropDownListFor(d => d.ExamId, Model.ExamList, new { @class = "form-control postback" })
            @Html.DropDownListFor(d => d.GradeId, Model.GradeList, new { @class = "form-control postback" })
            <br />
            班级<input type="checkbox" class="form-control" id="chkClassAll" name="chkClassAll" value="-1" onclick="javascript:checkClassAll(this)" @(Model.chkClassAll == "-1" ? "checked=checked" : "") /> 全选
            <div class="btn-group">
                @foreach (var item in Model.ClassList)
                {
                    var selectclass = Model.selctClassList.Where(d => d.Value == item.Value).FirstOrDefault();
                    <input type="checkbox" class="form-control" id="chkClass" name="chkClass" value="@item.Value" @(selectclass != null ? "checked=checked" : "") />@item.Text
                }
            </div>
            <br />
            科目<input type="checkbox" class="form-control" id="chkSubjectAll" name="chkSubjectAll" value="-1" onclick="javascript:checkSubjectAll(this)" @(Model.CheckedAll == "-1" ? "checked=checked" : "") /> 全选
            <div class="btn-group">

                @foreach (var item in Model.SubjectList)
                {
                    var selectsubject = Model.selectSubjectList.Where(d => d.Value == item.Value).FirstOrDefault();
                    <input type="checkbox" class="form-control" id="chkSubject" name="chkSubject" value="@item.Value" @(selectsubject != null ? "checked=checked" : "") />@item.Text
                }
            </div>
            多班前N名
            <div class="input-group form-group">
                @Html.TextBoxFor(d => d.SearchText, new { @class = "form-control", placeholder = Resources.LocalizedText.TipSearch })
                <span class="input-group-btn">
                    <button class="btn btn-primary" type="submit">
                        <span class="glyphicon glyphicon-search"></span>
                    </button>
                </span>
            </div>
        </div>
    </nav>



    <div class="table-responsive">
        <table class="table table-bordered table-hover table-striped">
            <thead>
                <tr>
                    <th rowspan="2" style="text-wrap:none; vertical-align:middle;" nowrap>
                        @Html.DisplayNameFor(d => d.ExamAnalyzeList.FirstOrDefault().ClassName)
                    </th>
                    @foreach (var subject in Model.selectSubjectList)
                    {
                        <th colspan="2" nowrap>
                            @subject.Text
                        </th>
                    }
                </tr>
                <tr>
                    @foreach (var subject in Model.selectSubjectList)
                    {
                        for (var i = 0; i < Model.OptionList.Count(); i++)
                        {
                            <th nowrap>@Model.OptionList[i]</th>
                        }
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var a in Model.selctClassList)
                {
                    <tr>
                        <td style="text-wrap:none" nowrap>
                            @a.Text
                        </td>
                        @foreach (var subject in Model.selectSubjectList)
                        {
                            var mark = Model.ExamAnalyzeList.Where(d => d.SubjectId == subject.Value.ConvertToInt() && d.ClassId == a.Value.ConvertToInt()
                                                                    ).Select(d => d).FirstOrDefault();
                            if (mark != null)
                            {
                                for (var i = 0; i < Model.OptionList.Count(); i++)
                                {
                                    switch (i)
                                    {
                                        case 0:
                                            <td nowrap>
                                                @mark.StudentCount
                                            </td>
                                            break;
                                        case 1:
                                            <td nowrap>
                                                @mark.Rate
                                            </td>
                                            break;
                                    }
                                }
                            }
                            else
                            {
                                <td nowrap></td>
                                        <td nowrap></td>
                            }
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<script language="Javascript">
    function checkSubjectAll(obj) {
        $("input[name='chkSubject']").prop('checked', $(obj).prop('checked'));
    }
    function checkClassAll(obj) {
        $("input[name='chkClass']").prop('checked', $(obj).prop('checked'));
    }
</script>
