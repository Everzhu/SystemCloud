@model XkSystem.Areas.Exam.Models.ExamAnalyze.List

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
    <h4>成绩综合报表</h4>
    <nav class="navbar">
        <div class="navbar-right">
            <a href="@Url.Action("ExportCompMarkReport",new {examId=Model.ExamId,GradeId =Model.GradeId,chkClass=Model.chkClass, chkSubject = Model.chkSubject,SearchText = Model.SearchText })" class="btn btn-primary">
                <span class="glyphicon glyphicon-download-alt"></span>
                @Resources.LocalizedText.BtnExportToExcel
            </a>
        </div>
        <div class="navbar-left navbar-form">
            <div class="btn-group">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span class="glyphicon glyphicon-list"></span>
                </button>
                <ul class="dropdown-menu">
                    <li><a href="@Url.Action("ClassMarkList","ExamAnalyzeGG")">班级成绩明细</a></li>
                    <li><a href="@Url.Action("List","ExamAnalyzeGG")">单科最高</a></li>
                    <li><a href="@Url.Action("ClassStudentTopList","ExamAnalyzeGG")">各班级尖子生</a></li>
                    <li><a href="@Url.Action("ClassMarkTopNList","ExamAnalyzeGG")">年级班级前十名册</a></li>
                    <li><a href="@Url.Action("ClassSubjectMarkList","ExamAnalyzeGG")">各学科情况统计表</a></li>
                    <li><a href="@Url.Action("TotalScoreAdvanceList", "ExamAnalyzeGG")">总分对比名次进退</a></li>
                    <li class="active"><a href="@Url.Action("CompMarkReportList","ExamAnalyzeGG")">成绩综合报表</a></li>
                    <li><a href="@Url.Action("TotalSegmentList", "ExamAnalyzeGG")">总分细化段</a></li>
                </ul>
            </div>
            @Html.DropDownListFor(d => d.ExamId, Model.ExamList, new { @class = "form-control postback" })
            @Html.DropDownListFor(d => d.GradeId, Model.GradeList, new { @class = "form-control postback" })
            <br />
            班级<input type="checkbox" class="form-control" id="chkClassAll" name="chkClassAll" value="-1" onclick="javascript:checkClassAll(this)" @(Model.chkClassAll == "-1" ? "checked=checked" : "") /> 全选
            <div class="btn-group">
                @foreach (var item in Model.ClassList)
                {
                    var selectclass = Model.selctClassList.Where(d => d.Value == item.Value).FirstOrDefault();
                    <input type="checkbox" class="form-control" id="chkClass" name="chkClass" value="@item.Value" @(selectclass != null ? "checked=checked" : "") />@item.Text
                }
                    </div>
                    <br />
                    科目<input type="checkbox" class="form-control" id="chkSubjectAll" name="chkSubjectAll" value="-1" onclick="javascript:checkSubjectAll(this)" @(Model.CheckedAll=="-1" ? "checked=checked": "" ) /> 全选
                    <div class="btn-group">

                    @foreach (var item in Model.SubjectList)
                   {
                    var selectsubject = Model.selectSubjectList.Where(d => d.Value == item.Value).FirstOrDefault();
                            <input type="checkbox" class="form-control" id="chkSubject" name="chkSubject" value="@item.Value" @(selectsubject !=null ? "checked=checked":"" ) />@item.Text
                        }
                    </div>
                    <div class="input-group form-group">
                        @Html.TextBoxFor(d => d.SearchText, new { @class = "form-control", placeholder = Resources.LocalizedText.TipSearch })
                        <span class="input-group-btn">
                            <button class="btn btn-primary" type="submit">
                                <span class="glyphicon glyphicon-search"></span>
                            </button>
                        </span>
                    </div>
                </div>
            </nav>

            <!--startprint-->
            <div class="table-responsive">
                @foreach (var s in Model.selectSubjectList)
                {
                    var subjectId = s.Value.ConvertToInt();
                    var SegmentList = Model.SegmentList.Where(d => d.SubjectId == subjectId).ToList();
                    var importCount = Model.ImortSegmentList.Count();
                    var segmentCount = SegmentList.Count();
                    <div style="page-break-after :always"></div>
                    <div style="text-align:center; font-weight:bold; Font-Size:20px">
                        @s.Text
                    </div>
                    <table class="table table-bordered table-hover table-striped">
                        <thead>
                            <tr>
                                <th colspan="@Model.OptionList.Count.ToString()" nowrap>
                                    基本情况
                                </th>
                                <th colspan="@Model.ClumnList.Count.ToString()" nowrap>
                                    各项比率
                                </th>
                                @if (importCount > 0)
                                {
                                    <th colspan="@importCount" nowrap>
                                        重要段人数
                                    </th>
                                }
                                @if (segmentCount > 0)
                                {
                                    <th colspan="@segmentCount" nowrap>
                                        各分数段人数
                                    </th>
                                }
                                <th colspan="3" nowrap>
                                    评估
                                </th>
                            </tr>
                            <tr>
                                @for (var k = 0; k < Model.OptionList.Count; k++)
                                {
                                    <th nowrap>@Model.OptionList[k]</th>
                                }
                                @for (var k = 0; k < Model.ClumnList.Count; k++)
                                {
                                    <th nowrap>@Model.ClumnList[k]</th>
                                }
                                @foreach (var imortSegment in Model.ImortSegmentList)
                                {
                                    <th nowrap>@imortSegment.SegmentName</th>
                                }
                                @foreach (var segment in SegmentList)
                                {
                                    <th nowrap>@segment.SegmentName</th>
                                }
                                <th nowrap>教师</th>
                                <th nowrap>标准分</th>
                                <th nowrap>名次</th>
                            </tr>
                            </thead>
                            <tbody>
                                @foreach (var t in Model.selctClassList)
                                {
                                    var classId = t.Value.ConvertToInt();
                                    var teacherName = string.Empty;
                                    if (subjectId != 0)
                                    {
                                        var teacher = string.Join(",", Model.SubjectTeacherList.Where(d => d.ClassId ==classId && d.SubjectId == subjectId).Select(d => d.TeacherName).Distinct().ToArray());
                                        teacherName = teacher;
                                    }
                                    else
                                    {
                                        var teacher = string.Join(",", Model.ClassTeacherList.Where(d => d.ClassId ==classId).Select(d => d.TeacherName).Distinct().ToArray());
                                        teacherName = teacher;
                                    }
                                    var mark = Model.ExamAnalyzeList.Where(d => d.ClassId == classId && d.SubjectId == subjectId
                                                                                                               ).Select(d => d).FirstOrDefault();
                                    <tr>
                                        <td nowrap>
                                            @t.Text
                                        </td>
                                        @if (mark != null)
                                        {
                                            <td nowrap>
                                                @mark.StudentNum
                                            </td>
                                            <td nowrap>
                                                @mark.StudentCount
                                            </td>
                                            <td nowrap>
                                                @mark.AvgMark
                                            </td>
                                            <td nowrap>
                                                @mark.MaxMark
                                            </td>
                                            <td nowrap>
                                                @mark.MinMark
                                            </td>
                                            <td nowrap>
                                                @mark.StandardDiff
                                            </td>

                                            <td nowrap>
                                                @mark.GoodRate
                                            </td>
                                            <td nowrap>
                                                @mark.NormalRate
                                            </td>
                                            <td nowrap>
                                                @mark.PassRate
                                            </td>
                                        }
                                        else
                                        {
                                            <td nowrap></td>
                                            <td nowrap></td>
                                            <td nowrap></td>
                                            <td nowrap></td>
                                            <td nowrap></td>
                                            <td nowrap></td>
                                            <td nowrap></td>
                                            <td nowrap></td>
                                            <td nowrap></td>
                                        }
                                        @if (importCount > 0)
                                        {
                                            foreach (var imortSegment in Model.ImortSegmentList)
                                            {
                                                var segmentId = imortSegment.SegmentId;
                                                var imortMark = Model.ExamAnalyzeImportSegmentList.Where(d => d.SegmentId == segmentId
                                                && d.ClassId == classId && d.SubjectId == subjectId).FirstOrDefault();
                                                if (imortMark != null)
                                                {
                                                    <td nowrap>
                                                        @imortMark.StudentNum
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td nowrap></td>
                                                }
                                            }
                                        }
                                        @if (segmentCount > 0)
                                        {
                                            foreach (var segment in Model.SegmentList.Where(d=>d.SubjectId==subjectId))
                                            {
                                                var segmentId = segment.SegmentId;
                                                var segmentMark = Model.ExamAnalyzeSegmentList.Where(d => d.SegmentId == segmentId
                                                && d.ClassId == classId && d.SubjectId == subjectId).FirstOrDefault();
                                                if (segmentMark != null)
                                                {
                                                    <td nowrap>
                                                        @segmentMark.StudentNum
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td nowrap></td>
                                                }
                                            }
                                        }

                                        @if (mark != null)
                                        {
                                        <td nowrap>
                                            @teacherName
                                        </td>
                                        <td nowrap>
                                            @mark.StandardMark
                                        </td>
                                        <td nowrap>
                                            @mark.GradeRank
                                        </td>
                                        }
                                        else
                                        {
                                            <td nowrap></td>
                                            <td nowrap></td>
                                            <td nowrap></td>
                                        }
                                    </tr>

                                }
                            </tbody>
                        </table>
                }
            </div>
            <!--endprint-->
}
<script language="Javascript">
    function preview() {
        var prnhtml = null;
        bdhtml = window.document.body.innerHTML;
        sprnstr = "<!--startprint-->";//开始标识
        eprnstr = "<!--endprint-->";//结束标识
        prnhtml = bdhtml.substr(bdhtml.indexOf(sprnstr) + 17);
        prnhtml = prnhtml.substring(0, prnhtml.indexOf(eprnstr)); //截取标识之间部分打印
        FGFG = window.document.body.innerHTML
        window.document.body.innerHTML = prnhtml;
        window.print();
        window.document.body.innerHTML = FGFG //如果不加此行，没有打印的部分在页面上会隐藏掉
        window.location.reload();
    }
    function checkSubjectAll(obj) {
        $("input[name='chkSubject']").prop('checked', $(obj).prop('checked'));
    }
    function checkClassAll(obj) {
        $("input[name='chkClass']").prop('checked', $(obj).prop('checked'));
    }
</script>